anybox.recipe.openerp
=====================

.. contents::

This is a buildout recipe to download, install and configure OpenERP server,
web client and gtk client. It currently only supports version 6.0.

 - For the server: recipe = anybox.recipe.openerp:server
 - For the web client: recipe = anybox.recipe.openerp:webclient
 - For the gtk client: recipe = anybox.recipe.openerp:gtkclient

Recipe options
~~~~~~~~~~~~~~

zc.recipe.egg options
---------------------

This recipe reuses the *zc.recipe.egg* recipe, so the options are the same
(*eggs*, *interpreter*, etc.)
Consult the documentation here http://pypi.python.org/pypi/zc.recipe.egg/1.3.2

specific options
----------------

It also adds a few specific options :

 * **version**: specify the version of OpenERP (server, web client or gtk client),
   or the specific revision in case `url` points to a bzr branch
 * **url** : specify the direct download url for the server or client archive,
   or specify the url of a custom bzr branch.
   This option overrides the version specification
 * **script_name**: specify the name of the startup script to generate

To use an official OpenERP version, just specify the version. For instance with the webclient::

    [webclient]
    recipe = anybox.recipe.openerp:webclient
    version = 6.0.3

If you want to use your own custom branch and use a local clone at revision 4751::

    [webclient]
    recipe = anybox.recipe.openerp:webclient
    url = bzr+https://code.launchpad.net/~anybox/openobject-client-web/6.0-bug-906449
    version = 4751

If you don't specify the version, it will use the latest revision of the branch.
The branch will be updated at each buildout run.

OpenERP options
---------------
The OpenERP configuration files are generated by OpenERP itself in the buildout
`etc` directory during the first buildout run.  You can overwrite options in
these config files in the recipe section of your buildout.cfg.  The options
must be written using a dotted notation prefixed with the name of the section.
The specified options will just overwrite the existing options in the
corresponding config files. You don't have to replicate all the options in your
buildout.cfg.  If an option or a section does not exist in the openerp config
file, it can be created from there.

For example you can specify the xmlrpc port for the server or
even an additional option that does not exist in the default config file::

  options.xmlrpc_port = 8069
  options.additional_option = "foobar"

It will end-up in the server config as::

  [options]
  xmlrpc_port = 8069
  additional_option = "foobar"

For the web client you can specify the company url with::

  global.server.socket_port = 8080
  openerp-web.company.url = 'http://anybox.fr'

It will modify the corresponding web client config::

  [global]
  server.socket_port = 8080

  [openerp-web]
  company.url = 'http://anybox.fr'

The `addons` option has a specific behaviour. You can use it to specify
additional OpenERP addons, either a relative or absolute path or an URL of a
subversion, bazaar, git or mercurial repository.
If you use a repository the syntax is::

  type url directory revision

where:
 * `type` can be bzr, hg, git or svn
 * `url` is any URL supported by the versionning tool
 * `directory` is the local directory that will be created
 * `revision` is any version specification supported

Example::

  addons = ../some/relative/path/for/custom_addons/
           /some/other/absolute/path/for/custom_addons
           bzr lp:openobject-addons/trunk/    addons0 last:1
           hg  http://example.com/some_addons addons1 tip
           git http://example.com/some_addons addons2 master
           svn http://example.com/some_addons addons3 head

Repositories are updated on each build. You have to be careful with your
version specification.


Generated scripts
~~~~~~~~~~~~~~~~~

Startup scripts are created in the `bin` directory. By default the name is:
start_<part_name>, so you can have several startup scripts for each part if you
configure several OpenERP servers or clients. You can pass additional typical
arguments to the server via the startup script, such as -i or -u options.


Example buildout
~~~~~~~~~~~~~~~~

Here is a sample buildout with versions specification, one OpenERP 6.1 server,
one OpenERP trunk server, one OpenERP 6.0 server, both using only NETRPC and listening on two different
ports, and one web client for the 6.0 server ::

    [buildout]
    parts = openerp1 openerp2 openerp3 webclient
    allow-picked-versions = false
    versions = versions
    find-links = http://download.gna.org/pychart/
    
    [openerp1]
    recipe = anybox.recipe.openerp:server
    eggs = PIL
    version = 6.1
    options.xmlrpc = False
    options.xmlrpcs = False

    [openerp2]
    recipe = anybox.recipe.openerp:server
    eggs = PIL
    version = 6.1
    options.xmlrpc = False
    options.xmlrpcs = False
    
    [openerp3]
    recipe = anybox.recipe.openerp:server
    eggs = PIL
    version = 6.0.3
    options.xmlrpc = False
    options.xmlrpcs = False
    options.netrpc_port = 8170
    
    [webclient]
    recipe = anybox.recipe.openerp:webclient
    version = 6.0.3
    global.openerp.server.port = '8170'
    global.server.socket_port = 8180
    
    [versions]
    Babel = 0.9.6
    FormEncode = 1.2.4
    Mako = 0.4.2
    MarkupSafe = 0.15
    PIL = 1.1.7
    anybox.recipe.openerp = 0.8
    babel = 0.9.6
    caldav = 0.1.10
    collective.recipe.cmd = 0.5
    coverage = 3.5
    distribute = 0.6.24
    feedparser = 5.0.1
    lxml = 2.1.5
    mako = 0.4.2
    nose = 1.1.2
    psycopg2 = 2.4.2
    pychart = 1.39
    pydot = 1.0.25
    pyparsing = 1.5.6
    python-dateutil = 1.5
    pytz = 2011h
    pywebdav = 0.9.4.1
    pyyaml = 3.10
    reportlab = 2.5
    simplejson = 2.1.6
    vobject = 0.8.1c
    z3c.recipe.scripts = 1.0.1
    zc.buildout = 1.5.2
    zc.recipe.egg = 1.3.2


Contribute
~~~~~~~~~~
The primary branch is on the launchpad:

- Code repository: https://code.launchpad.net/~anybox/+junk/anybox.recipe.openerp

Please branch on the launchpad or contact the author to report any bug or ask
for a new feature.


